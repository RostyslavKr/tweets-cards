{"version":3,"file":"static/js/260.e905e257.chunk.js","mappings":"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","sources":["services/putUser.js","webpack://tweets-cards/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","webpack://tweets-cards/./src/components/FilterUsers/FilterIsers.module.css?3bfc","components/FilterUsers/FilterUsers.jsx","services/getUsers.js","services/getFollowUsers.js","webpack://tweets-cards/./src/pages/Tweets.module.css?53ba","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport default async function putUsers(id, newData, status) {\n  try {\n    await axios.put(`/users/${id}`, {\n      followers: newData,\n      status: status,\n    });\n  } catch (error) {\n    return error.message;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Card_item__C00cL\",\"wrapperItem\":\"Card_wrapperItem__XjhWm\",\"wrapperImage\":\"Card_wrapperImage__2mX30\",\"imageAvatar\":\"Card_imageAvatar__jQHz5\",\"wrapperUserDescr\":\"Card_wrapperUserDescr__ob9-8\",\"btnFollow\":\"Card_btnFollow__Zhzej\",\"following\":\"Card_following__J3bSi\"};","import { useState, useEffect } from 'react';\nimport putUsers from '../../services/putUser';\nimport css from '../Card/Card.module.css';\nimport clsx from 'clsx';\n\nexport const Card = ({ id, followers, avatar, user, tweets, status }) => {\n  const [statusFollow, setStatusFollow] = useState(status);\n  const [followersCount, setFollowers] = useState(followers);\n  const [firstMount, setFirstMount] = useState(true);\n\n  useEffect(() => {\n    if (firstMount) {\n      return;\n    }\n    putUsers(id, followersCount, statusFollow);\n  }, [statusFollow, firstMount, followersCount, id]);\n\n  const toggleStatusFollow = () => {\n    setStatusFollow(!statusFollow);\n    setFirstMount(false);\n    if (statusFollow) {\n      setFollowers(prevFollowers => {\n        return prevFollowers - 1;\n      });\n    } else {\n      setFollowers(prevFollowers => {\n        return prevFollowers + 1;\n      });\n    }\n  };\n\n  const changeFollowers = number => {\n    const numberArr = [number];\n    const digits = numberArr.toString().split('');\n    if (digits.length === 6) {\n      digits.splice(3, 0, ',');\n      return digits.join('');\n    }\n    return number;\n  };\n\n  return (\n    <li className={css.item}>\n      <div className={css.wrapperItem}></div>\n      <div className={css.wrapperUserDescr}>\n        <div className={css.wrapperImage}>\n          <img className={css.imageAvatar} src={avatar} alt={user} />\n        </div>\n        <h3 className={css.tweets}>{tweets} Tweets</h3>\n        <h3 className={css.followers}>\n          {changeFollowers(followersCount)} Followers\n        </h3>\n        <button\n          className={clsx(\n            `${css.btnFollow}`,\n            statusFollow && `${css.following}`\n          )}\n          type=\"button\"\n          onClick={() => toggleStatusFollow()}\n        >\n          {statusFollow ? 'Following' : 'Follow'}\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperFilter\":\"FilterIsers_wrapperFilter__tfvEb\",\"btnChoose\":\"FilterIsers_btnChoose__PrkCg\",\"isSelected\":\"FilterIsers_isSelected__Qlj9u\"};","import css from './FilterIsers.module.css';\nimport clsx from 'clsx';\n\nexport const FilterUsers = ({ selected = 'all', filter }) => {\n  return (\n    <div className={css.wrapperFilter}>\n      <button\n        type=\"button\"\n        className={clsx(css.btnChoose, {\n          [css.isSelected]: selected === 'all',\n        })}\n        onClick={() => filter('all')}\n      >\n        ALL\n      </button>\n      <button\n        type=\"button\"\n        className={clsx(css.btnChoose, {\n          [css.isSelected]: selected === 'follow',\n        })}\n        onClick={() => filter('follow')}\n      >\n        FOLLOW\n      </button>\n      <button\n        type=\"button\"\n        className={clsx(css.btnChoose, {\n          [css.isSelected]: selected === 'followings',\n        })}\n        onClick={() => filter('followings')}\n      >\n        FOLLOWINGS\n      </button>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nexport const fetchUsers = async page => {\n  try {\n    const response = await axios.get(`/users?page=${page}&limit=3`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6442a8ce33997d3ef9165f47.mockapi.io';\n\nexport const fetchFollowUsers = async (page, status) => {\n  try {\n    const response = await axios.get(`/users?page=${page}&limit=3`, {\n      params: {\n        status: `${status}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listTweets\":\"Tweets_listTweets__AfSxK\",\"btnBack\":\"Tweets_btnBack__vEb9o\",\"btnLoadMore\":\"Tweets_btnLoadMore__XzH+5\"};","import { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Card } from 'components/Card/Card';\nimport { FilterUsers } from 'components/FilterUsers/FilterUsers';\nimport { fetchUsers } from '../services/getUsers';\nimport { fetchFollowUsers } from 'services/getFollowUsers';\nimport css from '../pages/Tweets.module.css';\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [currentUsersLength, setCurrentUsersLength] = useState(null);\n  const [selected, setSelected] = useState('all');\n  const [firstLoad, setFirstLoad] = useState(true);\n\n  useEffect(() => {\n    if (firstLoad) {\n      fetchUsers(page).then(data => setUsers(data));\n      setFirstLoad(false);\n      return;\n    }\n    if (page > 1 && selected === 'all') {\n      fetchUsers(page).then(data => {\n        setCurrentUsersLength(data.length);\n        if (data.length !== 0) {\n          setUsers(prevUsers => {\n            return [...prevUsers, ...data];\n          });\n        }\n      });\n    }\n    if (selected === 'follow') {\n      fetchFollowUsers(page, false).then(data => {\n        setCurrentUsersLength(data.length);\n        if (data.length !== 0) {\n          setUsers(prevUsers => {\n            return [...prevUsers, ...data];\n          });\n        }\n      });\n    }\n    if (selected === 'followings') {\n      fetchFollowUsers(page, true).then(data => {\n        setCurrentUsersLength(data.length);\n        if (data.length !== 0) {\n          setUsers(prevUsers => {\n            return [...prevUsers, ...data];\n          });\n        }\n      });\n    }\n  }, [page, selected, firstLoad]);\n\n  const onLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const handleStatusFilter = status => {\n    setUsers([]);\n    setPage(1);\n    setCurrentUsersLength(null);\n    setSelected(status);\n  };\n\n  return (\n    <div>\n      <FilterUsers selected={selected} filter={handleStatusFilter} />\n      <NavLink to=\"/\">\n        <button className={css.btnBack}>Back</button>\n      </NavLink>\n      <ul className={css.listTweets}>\n        {users &&\n          users.map(({ id, followers, avatar, user, tweets, status }) => (\n            <Card\n              key={id}\n              user={user}\n              followers={followers}\n              avatar={avatar}\n              tweets={tweets}\n              id={id}\n              status={status}\n            />\n          ))}\n      </ul>\n      {currentUsersLength !== 0 && (\n        <button\n          className={css.btnLoadMore}\n          type=\"button\"\n          onClick={() => onLoadMore()}\n        >\n          Load More\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"names":["id","newData","status","axios","followers","message","Card","avatar","user","tweets","useState","statusFollow","setStatusFollow","followersCount","setFollowers","firstMount","setFirstMount","useEffect","putUsers","className","css","src","alt","number","digits","toString","split","length","splice","join","changeFollowers","clsx","type","onClick","prevFollowers","FilterUsers","selected","filter","fetchUsers","page","response","data","fetchFollowUsers","params","users","setUsers","setPage","currentUsersLength","setCurrentUsersLength","setSelected","firstLoad","setFirstLoad","then","prevUsers","to","map","prevPage"],"sourceRoot":""}